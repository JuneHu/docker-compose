version: "3"

services:
  mysql:
    image: mysql:5
    container_name: mysql5
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - ${MYSQL_DATA_DIR}:/var/lib/mysql
    restart: always
    networks:
      - phpdev

  php:
    build:
      context: ./php/
      args:
        TZ: "$TZ"
        PHP_VERSION: "${PHP_VERSION}"
    container_name: php7
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
    restart: always
    networks:
      - phpdev

  nginx:
    build:
      context: ./nginx/
      args:
        TZ: "$TZ"
        NGINX_VERSION: "${NGINX_VERSION}"
    container_name: nginx
    volumes:
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    restart: always
    networks:
      - phpdev

  redis:
    build:
      context: ./redis/
      args:
        TZ: "$TZ"
        REDIS_VERSION: "${REDIS_VERSION}"
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${REDIS_DATA_DIR}:/data
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - phpdev

networks:
  phpdev:
